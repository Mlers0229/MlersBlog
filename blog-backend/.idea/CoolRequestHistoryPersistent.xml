<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CoolRequestHistoryPersistent">
    <option name="historyAPIS" value="[{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;943f1ac61113774d43ccbb60897b76ae&quot;,&quot;moduleName&quot;:&quot;blog-backend&quot;,&quot;contextPath&quot;:&quot;/api&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/posts/{id}&quot;,&quot;simpleClassName&quot;:&quot;com.mlersblog.controller.PostController&quot;,&quot;methodName&quot;:&quot;getPostById&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取指定ID的文章 - 公开API，允许匿名访问&quot;,&quot;description&quot;:&quot;获取指定ID的文章 - 公开API，允许匿名访问&quot;,&quot;methodName&quot;:&quot;getPostById&quot;,&quot;className&quot;:null},&quot;host&quot;:&quot;http://localhost&quot;,&quot;classSummary&quot;:&quot;文章控制器 处理文章相关的HTTP请求 &quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/api/posts/{id}&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;requestBodyType&quot;:null,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[{&quot;key&quot;:&quot;request&quot;,&quot;type&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;value&quot;:&quot;&quot;},{&quot;key&quot;:&quot;authentication&quot;,&quot;type&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;value&quot;:&quot;&quot;}],&quot;urlPathParams&quot;:[{&quot;key&quot;:&quot;id&quot;,&quot;type&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;value&quot;:&quot;1&quot;}],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/api&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,3,10,17,8,35,877411600],&quot;historyId&quot;:&quot;3b28dab7-f551-409f-b8ce-95a8000b7472&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;943f1ac61113774d43ccbb60897b76ae&quot;,&quot;moduleName&quot;:&quot;blog-backend&quot;,&quot;contextPath&quot;:&quot;/api&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/api/posts/{id}&quot;,&quot;simpleClassName&quot;:&quot;com.mlersblog.controller.PostController&quot;,&quot;methodName&quot;:&quot;getPostById&quot;,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;获取指定ID的文章 - 公开API，允许匿名访问&quot;,&quot;description&quot;:&quot;获取指定ID的文章 - 公开API，允许匿名访问&quot;,&quot;methodName&quot;:&quot;getPostById&quot;,&quot;className&quot;:null},&quot;host&quot;:&quot;http://localhost&quot;,&quot;classSummary&quot;:&quot;文章控制器 处理文章相关的HTTP请求 &quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/api/posts/{id}&quot;,&quot;requestBody&quot;:&quot;&quot;,&quot;requestBodyType&quot;:null,&quot;httpMethod&quot;:&quot;GET&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[{&quot;key&quot;:&quot;request&quot;,&quot;type&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;value&quot;:&quot;&quot;},{&quot;key&quot;:&quot;authentication&quot;,&quot;type&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;value&quot;:&quot;&quot;}],&quot;urlPathParams&quot;:[{&quot;key&quot;:&quot;id&quot;,&quot;type&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;value&quot;:&quot;15149&quot;}],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/api&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,3,10,17,8,31,114308000],&quot;historyId&quot;:&quot;2b928f5e-a0c0-432f-847a-6e256d97a671&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;05374ab284463e9ea4ed0454ebb5aa93&quot;,&quot;moduleName&quot;:&quot;blog-backend&quot;,&quot;contextPath&quot;:&quot;/api&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/users/register&quot;,&quot;simpleClassName&quot;:&quot;com.mlersblog.controller.UserController&quot;,&quot;methodName&quot;:&quot;register&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;用户注册&quot;,&quot;description&quot;:&quot;用户注册&quot;,&quot;methodName&quot;:&quot;register&quot;,&quot;className&quot;:null},&quot;host&quot;:&quot;http://localhost&quot;,&quot;classSummary&quot;:&quot;用户控制器 处理用户相关的HTTP请求 &quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/users/register&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;password\&quot; : \&quot;Mlersisme\&quot;,\r\n  \&quot;nickname\&quot; : \&quot;Mlers\&quot;,\r\n  \&quot;email\&quot; : \&quot;2914618641@qq.com\&quot;,\r\n  \&quot;username\&quot; : \&quot;Mlers\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/api&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,3,10,16,10,35,159323800],&quot;historyId&quot;:&quot;ba47cd4d-31f6-4f62-a656-355bd2f316f5&quot;},{&quot;id&quot;:null,&quot;moduleName&quot;:null,&quot;contextPath&quot;:null,&quot;serverPort&quot;:0,&quot;url&quot;:null,&quot;simpleClassName&quot;:null,&quot;methodName&quot;:null,&quot;httpMethod&quot;:null,&quot;methodDescription&quot;:null,&quot;host&quot;:null,&quot;classSummary&quot;:&quot;&quot;,&quot;originController&quot;:{&quot;id&quot;:&quot;79c9b212ba20a900914be2e6a310d5ac&quot;,&quot;moduleName&quot;:&quot;blog-backend&quot;,&quot;contextPath&quot;:&quot;/api&quot;,&quot;serverPort&quot;:8080,&quot;url&quot;:&quot;/auth/login&quot;,&quot;simpleClassName&quot;:&quot;com.mlersblog.controller.AuthController&quot;,&quot;methodName&quot;:&quot;login&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;methodDescription&quot;:{&quot;summary&quot;:&quot;用户登录&quot;,&quot;description&quot;:&quot;用户登录&quot;,&quot;methodName&quot;:&quot;login&quot;,&quot;className&quot;:null},&quot;host&quot;:&quot;http://localhost&quot;,&quot;classSummary&quot;:&quot;认证控制器 处理用户登录、注销、刷新令牌等认证相关请求 &quot;},&quot;requestCache&quot;:{&quot;requestEnvId&quot;:&quot;-1&quot;,&quot;url&quot;:&quot;http://localhost:8080/api/auth/login&quot;,&quot;requestBody&quot;:&quot;{\r\n  \&quot;password\&quot; : \&quot;123123\&quot;,\r\n  \&quot;username\&quot; : \&quot;123123\&quot;\r\n}&quot;,&quot;requestBodyType&quot;:&quot;application/json&quot;,&quot;httpMethod&quot;:&quot;POST&quot;,&quot;headers&quot;:[],&quot;urlParams&quot;:[],&quot;urlPathParams&quot;:[],&quot;formDataInfos&quot;:[],&quot;urlencodedBody&quot;:[],&quot;invokeModelIndex&quot;:0,&quot;useProxy&quot;:true,&quot;useInterceptor&quot;:false,&quot;contentPath&quot;:&quot;/api&quot;,&quot;requestScript&quot;:&quot;package com.cool.request.script;\r\nimport com.cool.request.script.HTTPRequest;\r\nimport com.cool.request.script.ILog;\r\nclass CoolRequestScript {\r\n    private ILog log;\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     * 3.If false is returned, the HTTP request will be cancel\r\n     *\r\n     * @param log     Log output\r\n     * @param request request parameters, where parameters can be changed\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public boolean handlerRequest(ILog log, HTTPRequest request,IEnv env) {\r\n        this.log = log;\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n        return true;\r\n    }\r\n    private void println(Object object) {\r\n        if (object == null) return;\r\n        if (log == null) return;\r\n        log.print(object.toString());\r\n\r\n    }\r\n\r\n}&quot;,&quot;responseScript&quot;:&quot;package com.cool.request.script;\r\n\r\nimport com.cool.request.script.HTTPResponse;\r\nimport com.cool.request.script.ILog;\r\nclass CoolResponseScript {\r\n\r\n    /**\r\n     * 1.Here, you can freely use any Java syntax, classes in any dependency, including third-party and user project.\r\n     * 2.modifying class and method names or parameters is not allowed\r\n     *\r\n     * @param log      Log output\r\n     * @param response The response result of HTTP\r\n     */\r\n    @SuppressWarnings(\&quot;all\&quot;)\r\n    public void handlerResponse(ILog log, HTTPResponse response,IEnv env) {\r\n        /**\r\n         * Write your code here\r\n         */\r\n\r\n    }\r\n}&quot;,&quot;port&quot;:8080,&quot;scriptLog&quot;:&quot;&quot;},&quot;httpResponseBody&quot;:null,&quot;localDateTime&quot;:[2025,3,10,16,9,59,833180800],&quot;historyId&quot;:&quot;5dc7e9cd-d3ca-4e09-accb-d3d658123920&quot;}]" />
  </component>
</project>